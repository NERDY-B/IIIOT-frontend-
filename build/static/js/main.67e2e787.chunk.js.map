{"version":3,"sources":["components/Loader.js","screens/RegisterScreen.js","actions/userAction.js","constants/userConstant.js","components/Table.js","actions/tableControlAction.js","constants/tableConstant.js","components/Header.js","actions/getAllUsersAction.js","constants/getAllUsesConstant.js","constants/startConstant.js","actions/startAction.js","actions/stopAction.js","constants/stopConstant.js","screens/HomeScreen.js","screens/SpinnerScreen.js","Helper/forgotPasswordUIOne.js","Helper/forgotPasswordUITwo.js","Helper/ForgotPasswordUIThree.js","screens/ForgotScreen.js","actions/forgotPassword.js","App.js","reducers/userReducers.js","store.js","reducers/pinApiStartReducer.js","constants/pinConstant.js","reducers/startReducer.js","reducers/stopReducer.js","reducers/forgotPasswordReducer.js","reducers/tableControlReducer.js","reducers/getAllUsersReducers.js","reportWebVitals.js","index.js"],"names":["Loader","RegisterScreen","defaultProps","dispatch","useDispatch","history","useHistory","change","setChangeEmail","useState","otp","setOTP","userName","setuserName","Email","setEmail","oldEmail","setOldMail","password","setPassword","confirmPassword","setConPassword","modalOpen","setModalOpen","timer","setTimer","checkInput","checkPassword","userRegistration","useSelector","state","userRegister","loading","error","userInfo","success","OTPvalidation","userOtp","loadingOTP","successOTP","errorOTP","otpInfo","changeEmailAccount","changeEmailId","emailInfo","useEffect","push","otpvalue","intervalId","setInterval","clearInterval","emailHandler","e","target","value","closeModal","preventDefault","console","log","key","successOne","JSON","parse","React","createElement","Fragment","className","onSubmit","email","test","alert","ValidateEmail","username","async","type","config","headers","Content-Type","data","axios","post","payload","err","message","localStorage","setItem","style","color","textAlign","onChange","placeholder","marginLeft","FaXTwitter","size","FaLinkedin","FaGoogle","FaGithub","FaFacebook","concat","onClick","MdClose","getItem","changeEmail","newEmail","put","pattern","title","trim","length","genOTP","get","resendOTP","display","margin","Table","_ref","allRegisteredUsers","allUsers","classNameVal","closeIconHandler","controlBtn","Payload","IoMdCloseCircle","registeredUsers","map","objEl","id","disabled","role","Object","values","FaCheck","RxCross2","Header","userLogin","showRegisteredUser","getState","dataLogin","access_token","token","Authorization","href","hideSidebar","harmburger","document","querySelector","close","opacity","IoMdClose","showSidebar","IoMdMenu","Link","to","startBtn","pin","stopBtn","HomeScreen","location","match","historyProps","background","textDecoration","SpinnerScreen","window","scrollY","scrollX","innerHeight","innerWidth","scrollTo","y","x","control","showUsers","controlData","isSpinning","setIsSpinning","loadingRegUsers","ForgotPasswordUIOne","props","proceed","borderBottom","signup","ForgotPasswordUITwo","emailDetails","forgotPassword","ForgotPasswordUIThree","passOne","passTwo","passTwoVal","passOneVal","ForgotScreen","emailForgot","setEmailForgot","otpValInput","newPass","setNewpass","confirmPass","setConfirmpass","count","setCount","page","setPage","passStatus","countLocalStored","newSetPass","newPassword","loadingNewPass","successPassApi","proceedHandlerBtn","parameters","getBoundingClientRect","top","left","behavior","newSetPassword","signUpHandler","App","Router","Container","Route","path","component","exact","reducer","combineReducers","arguments","undefined","action","pinMotor","startButton","stopButton","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","Provider","StrictMode"],"mappings":"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","file":"static/js/main.67e2e787.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation=\"border\" role=\"status\" style={{\r\n            width: '50px',\r\n            height: '50px',\r\n            margin: 'auto',\r\n            display: 'block'\r\n        }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader","import React from 'react'\r\nimport Modal from 'react-modal';\r\nimport {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { genOTP, resendOTP, userRegister, changeEmail } from '../actions/userAction'\r\nimport Loader from '../components/Loader'\r\nimport { FaFacebook } from \"react-icons/fa6\";\r\nimport { FaGithub } from \"react-icons/fa6\";\r\nimport { FaGoogle } from \"react-icons/fa6\";\r\nimport { FaLinkedin } from \"react-icons/fa6\";\r\nimport { FaXTwitter } from \"react-icons/fa6\";\r\n// import video from '../video/IOT.mp4';\r\nimport { MdClose } from \"react-icons/md\";\r\n\r\n\r\n\r\nconst RegisterScreen = (defaultProps) => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory()\r\n    \r\n    let state = false\r\n    let [change, setChangeEmail] = useState(false);\r\n    let [otp, setOTP ] = useState('')\r\n    const [userName, setuserName ] = useState('');\r\n    const [Email, setEmail ] = useState('');\r\n    let [oldEmail, setOldMail] = useState('')\r\n    const [password, setPassword ] = useState('');\r\n    const [confirmPassword, setConPassword ] = useState('');\r\n    let [modalOpen, setModalOpen] = useState(state);\r\n    let [timer, setTimer] = useState(60)\r\n    let inputValidation = undefined;\r\n\r\n\r\n    // if((userName && Email && password && confirmPassword) === undefined || '') && inputValidation = false;\r\n    // console.log(userName);\r\n\r\n   const checkInput = (userName  && Email && password && confirmPassword ) === '';\r\n    \r\n    const checkPassword =  (confirmPassword !== password)\r\n\r\n    const userRegistration = useSelector(state => state.userRegister)\r\n    const {loading, error, userInfo, success } = userRegistration\r\n\r\n    const OTPvalidation = useSelector( state => state.userOtp);\r\n    const {loading: loadingOTP, success: successOTP, error: errorOTP, otpInfo} = OTPvalidation\r\n\r\n    const changeEmailAccount = useSelector( state => state.changeEmailId);\r\n    const {emailInfo} = changeEmailAccount\r\n\r\nuseEffect(() => {\r\n    if(successOTP){\r\n        history.push('/')\r\n    }\r\n      \r\n}, [successOTP, history])\r\n\r\n\r\nconst ValidateEmail= (email) => \r\n{\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email))\r\n    {\r\n        return (true)\r\n    }\r\n    alert(\"You have entered an invalid email address!\")\r\n    return (false)\r\n}\r\n\r\nlet otpvalue = [...otp]\r\n\r\n\r\n        // else setOTP('')\r\n\r\n//end of the use effect scope\r\n//all handlers start from here\r\nif(errorOTP){\r\n    let intervalId = null\r\n    if(timer!== 0){\r\n         intervalId = setInterval(() => {\r\n            setTimer(timer => timer -= 1)\r\n        }, 1000)\r\n    }else{\r\n        timer = 0\r\n        clearInterval(intervalId)\r\n    }\r\n}\r\n\r\n    \r\n  \r\n    const registerHandler = (e) => {\r\n        e.preventDefault()\r\n        console.log(Email)\r\n        // console.log(userName, Email, password, 'returned ');\r\n        const emailValid = ValidateEmail(Email);\r\n        if(emailValid){\r\n\r\n            dispatch(userRegister(Email, userName, password));\r\n            setModalOpen(!state)\r\n        localStorage.setItem('email', Email);\r\n        }\r\n        // if((userName && Email && password ) === ''){\r\n        //     inputValidation = false;\r\n        // }else if(inputValidation){\r\n        //     dispatch(userRegister(Email, userName, password));\r\n        // }\r\n        \r\n        // setTimer()\r\n    }\r\n\r\n    const usernameHandler = (e) => {\r\n        setuserName(e.target.value)\r\n    }\r\n    const emailHandler = (e) => {\r\n        oldEmail = Email;\r\n        setEmail(e.target.value)\r\n    }\r\n    const passwordHandler = (e) => {\r\n        setPassword(e.target.value)\r\n    }\r\n    const confirmPasswordHandler = (e) => {\r\n        setConPassword(e.target.value)\r\n    }\r\n\r\n    const closeModal = (e) => {\r\n        e.preventDefault()\r\n        // if(e.key === 'Esc'){\r\n        //     setModalOpen(false)\r\n        // }\r\n        setModalOpen(false)\r\n        console.log(e.key)\r\n        \r\n    }\r\n    const changeEmailHandler = (e) => {\r\n        e.preventDefault();\r\n        setChangeEmail(!change)\r\n        \r\n    }\r\n    \r\n    const oldEmailHandler = () => {\r\n        \r\n        setOldMail()\r\n        \r\n    }\r\n\r\n    const inputotpHandler = (e) => {\r\n        setOTP(e.target.value); \r\n\r\n        \r\n    }\r\n\r\n    const OtpHandler = (e) => {\r\n        // const dispatch = useDispatch()\r\n        setOTP(e.target.value)\r\n        console.log(otp)\r\n        otpvalue.trim()\r\n        if(otpvalue.length === 6){\r\n            dispatch(genOTP((otp), Email))\r\n            // (successOTP && history.push('/testLogin'))\r\n            (successOTP && console.log('otp received'))\r\n            \r\n                \r\n               \r\n            }\r\n        \r\n        \r\n    }\r\n   \r\n   \r\n    const resendHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(resendOTP(Email))\r\n    }\r\n    \r\n    const proceedChangeEmailHandler =(e) => {\r\n        e.preventDefault()\r\n        dispatch(changeEmail(oldEmail, Email))\r\n        //place a condition here if it is successful d request setChangeEmail(!change)\r\n        setChangeEmail(!change)\r\n    }\r\n\r\n   \r\n\r\n    if(otpInfo){\r\n\r\n        const successOne = JSON.parse(otpInfo);\r\n        console.log(successOne)\r\n    }\r\n\r\n  return (\r\n    <>\r\n    <div className='entryanimation'>\r\n        <ul>\r\n            <li></li>\r\n            <li><p className='title'>POWER IIOT</p></li>\r\n            <li></li>\r\n        </ul>\r\n    </div>\r\n        \r\n        <main className='parent '>\r\n            \r\n            <div className='register-content'>\r\n              <div className='shape-1'></div>\r\n              <div className='shape-2'></div>\r\n               \r\n                <div className='img-banner'>\r\n                    {/* <video width=\"750\" height=\"500\"  autoplay muted style={{width:'15.5rem', height:''}} >\r\n                    <source src={video} type=\"video/mp4\"/>\r\n                    </video> */}\r\n                </div>\r\n                <form className='form-fields' onSubmit={registerHandler}>\r\n                       {checkInput && <p style={{color:\"white\", textAlign:\"center\"}}>Fill all Fields</p>}\r\n                            <input type='text' value={userName} onChange={usernameHandler} className='style'  placeholder='Username or id'/>\r\n                            <input type='text' value={Email} onChange={ emailHandler} className='style' placeholder='Email'/>                \r\n                            <input type='password' value={password} onChange={ passwordHandler }  className='style' placeholder='Password'/>\r\n                        \r\n                        { (checkPassword) &&  <p style={{ color : 'white', marginLeft: '32px'}}>Password incorrect</p>}\r\n                         <input type='password' value={confirmPassword} onChange={confirmPasswordHandler}  className='style' placeholder='Confirm Password'/>\r\n                        \r\n                        \r\n                        {(loading) && <div className='loading'></div>}\r\n                        {(!checkInput) && <input type='submit' value='Register' className='transform style' />}\r\n                        {/* <input type='text' value='' placeholder='try here'/> */}\r\n                    </form>\r\n\r\n                    <div className='social-media'>\r\n                        <ul>\r\n                            <li><FaXTwitter size='20px'/></li>\r\n                            <li><FaLinkedin size='20px' /></li>\r\n                            <li><FaGoogle size='20px' /></li>\r\n                            <li><FaGithub size='20px' /></li>\r\n                            <li><FaFacebook size='20px' /></li>\r\n                        </ul>\r\n                    </div>\r\n            </div>\r\n                \r\n            \r\n                \r\n                \r\n            \r\n            \r\n            {/* //----custom built modal */}\r\n                { loading ? \r\n                    \r\n                        <div className='overlay'>\r\n                            <div className='spinner-registration'></div>\r\n                           \r\n                        </div>\r\n                    // </div>\r\n                : \r\n                <div className={`modal-${modalOpen}`} >\r\n                    <div className='overlay'>\r\n\r\n                    </div>\r\n\r\n                        <div className=\"modal-content \">\r\n                            { (!change)? //if false\r\n                                (\r\n                                <form >\r\n                                    <div className='icon-close-btn' onClick={closeModal}><MdClose size='22px'/></div>\r\n                                        <label> Input OTP sent to your mail:</label>\r\n                                    \r\n                                        <div className='input-proceed'>\r\n                                                {/* add the onclick event on the parent element input-proceed\r\n                                                    specify six input with the same class, queryselector all the input\r\n                                                    loop through input.\r\n                                                     assign an attribue onChange using js in each loop for the input\r\n                                                    to get the values assign all values to an array \r\n                                                    an external or use useEffect to check if the array value is six then dispatch\r\n\r\n                                                */}\r\n                                            {/* <input type='text' pattern=\"[0-9]{1,6}\" title='Digits only' value={otp} onChange={inputotpHandler} className='modal-text' /> */}\r\n                                            <input type='text' pattern=\"[0-9]{1,6}\" title='Digits only' value={otp} onChange={OtpHandler} className='modal-text' />\r\n                                            {/* <label onClick={(otpvalue.length === 6)&& dispatch(genOTP(otp, Email))}>xxx</label> */}\r\n                                        </div>\r\n                                        \r\n                                        <div>\r\n                                            { (loadingOTP)&& <div className=\"loader\"></div>} \r\n            \r\n                                            { (otpInfo)&& <p >{`${otpInfo}`}</p> } \r\n                                            \r\n                                        </div>\r\n                                        \r\n                                        <button type=\"submit\" className='transform' onClick={resendHandler}>Resend: </button>\r\n                                        <div style={{display:'inline', margin:'0 20px'}}>{timer}</div>\r\n                                        <button type=\"submit\"  className='transform-red' onClick={changeEmailHandler}>Change Email</button>\r\n                                </form>\r\n                                    )\r\n                                :\r\n                                (\r\n                                    <form className='credential-change' >\r\n                                        <div className='icon-close-btn' onClick={closeModal}><MdClose size='22px'/></div>\r\n                                        <input type='readonly' value={localStorage.getItem('email') } placeholder='Old Email' style={{placeholder:'black'}}   />\r\n                                        <input type='text' placeholder='New Email' value={Email}  onChange={emailHandler} />\r\n                                        <input type='submit' value='Proceed' className='transform' onClick={ proceedChangeEmailHandler}/>\r\n                                    </form>\r\n                                    \r\n            \r\n                                )\r\n                        }\r\n                            \r\n                                \r\n                        </div>\r\n                        </div>\r\n            }        \r\n       </main>\r\n   \r\n    </>\r\n    \r\n    \r\n  )\r\n\r\n\r\n\r\n}\r\n\r\nexport default RegisterScreen","import axios from 'axios'\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n     USER_LOGIN_SUCCESS, \r\n     USER_LOGOUT, \r\n     USER_LOGIN_FAIL, \r\n     USER_REGISTER_REQUEST,\r\n     USER_REGISTER_SUCCESS,\r\n     USER_REGISTER_FAIL,\r\n     OTP_REQUEST,\r\n     OTP_SUCCESS,\r\n     OTP_FAIL,\r\n     OTP_RESEND_REQUEST,\r\n     OTP_RESEND_SUCCESS,\r\n     OTP_RESEND_FAIL,\r\n     CHANGE_EMAIL_REQUEST,\r\n     CHANGE_EMAIL_SUCCESS,\r\n     CHANGE_EMAIL_FAIL,\r\n     FORGOT_PASSWORD_REQUEST,\r\n     FORGOT_PASSWORD_SUCCESS,\r\n     FORGOT_PASSWORD_FAIL} from \"../constants/userConstant\";\r\n\r\nexport const userLogin = (email, password) => async (dispatch, getState) => {\r\n    try {\r\n        \r\n        dispatch({ type: USER_LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        \r\n\r\n        const { data } = await axios.post(`https://industrialiot.onrender.com/api/login`, { email, password }, config)\r\n        dispatch({ \r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n         })\r\n        \r\n\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: err.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const userRegister = (email, username, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n    \r\n        const { data } = await axios.post('https://industrialiot.onrender.com/api/register', {email, username, password}, config)\r\n    \r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n    \r\n    } catch (err) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: err.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const userLogout = () => (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGOUT\r\n        })\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const genOTP = (otp, email) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: OTP_REQUEST\r\n        })\r\n    \r\n        // eslint-disable-next-line\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        \r\n        const {data} =  axios.post(`https://industrialiot.onrender.com/api/verifyemail`,{otp, email}, config)\r\n        \r\n     \r\n    \r\n        dispatch({\r\n            type: OTP_SUCCESS,\r\n            payload: data\r\n            // payload: info\r\n        })\r\n    \r\n    } catch (err) {\r\n        dispatch({\r\n            type:OTP_FAIL,\r\n            payload: err.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const resendOTP = (email) => async(dispatch) =>{\r\n    try {\r\n        dispatch({\r\n            type: OTP_RESEND_REQUEST\r\n        })\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`https://industrialiot.onrender.com/api/verifyemail`, {email}, config)\r\n    \r\n        dispatch({\r\n            type: OTP_RESEND_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: OTP_RESEND_FAIL,\r\n            payload: error.message\r\n        })\r\n    }\r\n   \r\n}\r\n\r\nexport const changeEmail = (email, newEmail) => async(dispatch) =>{\r\n    try {\r\n        dispatch({\r\n            type: CHANGE_EMAIL_REQUEST\r\n        })\r\n    \r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`https://industrialiot.onrender.com/api/verifyemail`, {email, newEmail}, config)\r\n    \r\n        dispatch({\r\n            type: CHANGE_EMAIL_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CHANGE_EMAIL_FAIL,\r\n            payload: error.message\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\nexport const OTP_REQUEST = 'OTP_REQUEST'\r\nexport const OTP_SUCCESS = 'OTP_SUCCESS'\r\nexport const OTP_FAIL = 'OTP_FAIL'\r\nexport const OTP_RESEND_REQUEST = 'OTP_RESEND_REQUEST'\r\nexport const OTP_RESEND_SUCCESS = 'OTP_RESEND_SUCCESS'\r\nexport const OTP_RESEND_FAIL = 'OTP_RESEND_FAIL'\r\nexport const CHANGE_EMAIL_REQUEST = 'CHANGE_EMAIL_REQUEST'\r\nexport const CHANGE_EMAIL_SUCCESS = 'CHANGE_EMAIL_SUCCESS'\r\nexport const CHANGE_EMAIL_FAIL = 'CHANGE_EMAIL_FAIL'\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS'\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL'\r\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST'\r\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS'\r\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL'\r\n\r\n\r\n","import React from 'react'\r\nimport { IoMdCloseCircle } from \"react-icons/io\";\r\nimport { hideTable } from '../actions/tableControlAction';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { FaCheck } from \"react-icons/fa\";\r\nimport { RxCross2 } from \"react-icons/rx\";\r\n\r\n{/* <RxCross2 /> */}\r\n\r\n{/* <FaCheck /> */}\r\n\r\nconst Table = ({display}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const allRegisteredUsers =  useSelector((state) => state.allUsers);\r\n    let {loading, success} = allRegisteredUsers;\r\n\r\n    //  const control = useSelector(state => state.showUser);\r\n    // const {controlData} = control;\r\nconsole.log(success)\r\nlet classNameVal = '';\r\n    if(display){\r\n        classNameVal = `nothing`\r\n    }\r\n    else{\r\n        classNameVal = 'hidden'\r\n    }\r\n\r\n    console.log(display);\r\n\r\n    const closeIconHandler = () => {\r\n        dispatch(hideTable());\r\n    }\r\n  return (\r\n    \r\n    <div className={`table-parent ${classNameVal}`}>\r\n        <div className='closebtn' onClick={closeIconHandler}>\r\n                <IoMdCloseCircle size={32} />\r\n        </div>\r\n    {console.log(classNameVal)}\r\n        <div className='list-header'>\r\n                        <input type='text' placeholder={`Search name, email, or username `} className='search-field' />\r\n\r\n                        <div>\r\n                            <label>Active<sup>20</sup></label>\r\n                            <label>Inactive<sup>5</sup></label>\r\n                        </div>\r\n                        \r\n         </div>\r\n\r\n        <table className={`content-table `}>\r\n                        <thead>\r\n                        <tr>\r\n                            <th>I.d</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Role</th>\r\n                            <th>Verified</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {/* <tr> */}\r\n                            {success?.registeredUsers.map((objEl) => \r\n                                        ( \r\n                                            <tr>\r\n                                                {console.log(objEl)}\r\n                                                {console.log('wetin dey occurs for here now')}\r\n                                                {/* <p> wetin xup </p> */}\r\n                                                <td>{objEl.id}</td>\r\n                                                <td>{objEl.username}</td>\r\n                                                <td>{objEl.email}</td>\r\n                                                <td>\r\n                                                    <select id=\"roles\" disabled value={(objEl.role === 'admin')? 'admin': 'User'}>\r\n                                                        <option value='Admin'>{objEl.role}</option>\r\n                                                        <option value=\"User\" >User</option>\r\n                                                    </select>\r\n                                                </td> \r\n                                                \r\n                                                <td>{(Object.values(objEl)[4])?<FaCheck />: <RxCross2 />}</td>\r\n                                                {/* <td>${objEl.id}</td>\r\n                                                <td>${objEl.userName}</td>\r\n                                                <td>${objEl.verifiedEmail}</td>\r\n                                                <td>\r\n                                                    <select id=\"roles\" disabled value={(objEl.role === 'admin')? 'admin': 'User'}>\r\n                                                        <option value='Admin'>${objEl.role}</option>\r\n                                                        <option value=\"User\" >User</option>\r\n                                                    </select>\r\n                                                </td> */}\r\n                                            </tr>\r\n                                        )\r\n                            \r\n                               \r\n                                )}               \r\n                           \r\n                            {/* <td>1</td>\r\n                            <td>Domenic</td>\r\n                            <td>88,110</td>\r\n                            <td>\r\n                                <select id=\"roles\" disabled value='User'>\r\n                                            <option value=\"Admin\">Admin</option>\r\n                                            <option value=\"User\" >User</option>\r\n                                    </select>\r\n                            </td>\r\n                            <td>dcode</td> */}\r\n                        {/* </tr> */}\r\n                        {/* <tr className=\"active-row\">\r\n                            <td>2</td>\r\n                            <td>Sally</td>\r\n                            <td>72,400</td>\r\n                            <td>\r\n                                <select id=\"roles\" disabled value='User'>\r\n                                            <option value=\"Admin\">Admin</option>\r\n                                            <option value=\"User\" >User</option>\r\n                                 </select>\r\n                            </td>\r\n                            <td>Students</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>3</td>\r\n                            <td>Nick</td>\r\n                            <td>52,300</td>\r\n                            <td>\r\n                                <select id=\"roles\" disabled value='User'>\r\n                                            <option value=\"Admin\">Admin</option>\r\n                                            <option value=\"User\">User</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>dcode</td>\r\n                        </tr> */}\r\n                        </tbody>\r\n                     </table>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table","import { HIDE,SHOW } from \"../constants/tableConstant\";\r\n\r\nexport const showTable=() => async (dispatch) =>  {\r\n    dispatch({\r\n        type:SHOW,\r\n        controlBtn: 'disabled',\r\n        payload: true\r\n    })\r\n}\r\n\r\nexport const hideTable = () => async (dispatch) => {\r\n    dispatch({\r\n        type: HIDE,\r\n        controlBtn:'',\r\n        Payload: false\r\n    })\r\n}","export const SHOW = 'SHOW';\r\nexport const HIDE = 'HIDE';","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useEffect } from 'react'\r\nimport { USER_LOGOUT } from '../constants/userConstant'\r\nimport { userLogin, userLogout } from '../actions/userAction'\r\nimport { IoMdMenu } from \"react-icons/io\"\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport Table from '../components/Table'\r\nimport { showTable } from '../actions/tableControlAction'\r\nimport { getAllUsers } from '../actions/getAllUsersAction'\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export let[controlT, setControlT] = useState(false);\r\n\r\n\r\nconst Header = () => {\r\n   \r\n    // const control = useSelector(state => state.showUser);\r\n    // const {controlData} = control;\r\n   \r\n   \r\n\r\n    const user = useSelector((state) => state.userLogin);\r\n    // const {sucess, loading, data} = user\r\n   \r\n    const allUsers = useSelector(state => state.allUsers);\r\n    const {loading, success} = allUsers;\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const showSidebar = () => {\r\n        const harmburger = document.querySelector('.harmburgerdropdown')\r\n        const close = document.querySelector('.close');\r\n        harmburger.style.display = 'flex';\r\n        close.style.opacity = '1';\r\n        \r\n        \r\n        console.log(harmburger)\r\n    }\r\n    \r\n\r\n    const hideSidebar = () => {\r\n        const harmburger = document.querySelector('.harmburgerdropdown')\r\n        const close = document.querySelector('.close');\r\n        harmburger.style.display = 'none';\r\n        close.style.opacity = 0;\r\n    }\r\n    const showRegisteredUser = () => {\r\n        //do a validation here to see if a user is logged in already\r\n        //if not route to login \r\n        \r\n        dispatch(getAllUsers());\r\n\r\n        console.log(success)\r\n        // if(success){\r\n        //     dispatch(showTable());\r\n        // }\r\n        if(!loading){\r\n            dispatch(showTable())\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='header-container'>\r\n            \r\n            <h1 className='text'><span>Power IIOT</span></h1>\r\n            \r\n            <div className='navbar'>\r\n                 <ul>\r\n                    <li className='main-menu'><a href=\"#\"></a>User\r\n                        <div className='dropdown-menu'>\r\n                            <ul >\r\n                                <li className='lists'>Profile settings</li>\r\n                                <li className='lists reg' onClick={showRegisteredUser}>Registered users</li>\r\n                                {/* <li className='lists'>Switch to owner</li>\r\n                                <li className='lists'>Delete account</li> */}\r\n                            </ul>\r\n\r\n                           \r\n\r\n                        </div>\r\n                    </li>\r\n                 </ul>\r\n\r\n                 \r\n            </div>\r\n\r\n            <div className='harmbugerNav'>\r\n                <ul>\r\n                    <li className='close' onClick={hideSidebar}> <IoMdClose size={40}/> </li>\r\n                    <li className='harmburger' onClick={showSidebar}>\r\n                        <IoMdMenu size={40} />\r\n                        <div className='harmburgerdropdown hidden' >\r\n                       \r\n                           <ul className='harmbugersidebars'>\r\n                                <li className='lists'>Profile settings</li>\r\n                                <li className='lists' onClick={showRegisteredUser}>Registered users</li>\r\n                                {/* <li className='lists'>All users</li>\r\n                                <li className='lists'>Switch to owner</li>\r\n                                <li className='lists'>Delete account</li> */}\r\n                                <Link  className='logout-style' to='/' onClick={() => dispatch(userLogout())}>LOGOUT </Link>\r\n                            </ul>\r\n\r\n                        \r\n                         \r\n                        </div>\r\n                    </li>\r\n                 </ul>\r\n                 \r\n                \r\n                    \r\n                 \r\n\r\n                 \r\n            </div>\r\n                <Link  className='logger' to='/' onClick={() => dispatch(userLogout())}>LOGOUT </Link>\r\n                \r\n                \r\n                {/* <Table /> */}\r\n        \r\n        </div>\r\n\r\n    \r\n    )\r\n}\r\n\r\n// export {showTable};\r\nexport default Header","import axios from 'axios'\r\nimport { GET_ALL_USERS_FAIL, GET_ALL_USERS_REQUEST, GET_ALL_USERS_SUCCESS } from '../constants/getAllUsesConstant'\r\n\r\n\r\nexport const getAllUsers = () => async(dispatch, getState) =>{\r\n    try {\r\n        dispatch({\r\n            type: GET_ALL_USERS_REQUEST\r\n        })\r\n        \r\n        const { userLogin: { data: dataLogin } } = getState()\r\n        const { access_token } = dataLogin.token\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${access_token}`\r\n\r\n            }\r\n        }\r\n\r\n        // const {data} = await axios.put(`https://industrialiot.onrender.com/api/verifyemail`, {email, newEmail}, config)\r\n        const {data} = await axios.get(`https://industrialiot.onrender.com/api/users`, config)\r\n    \r\n        dispatch({\r\n            type: GET_ALL_USERS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ALL_USERS_FAIL,\r\n            payload: error.message\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n","export const GET_ALL_USERS_REQUEST = 'GET_ALL_USERS_REQUEST'\r\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS'\r\nexport const GET_ALL_USERS_FAIL = 'GET_ALL_USERS_FAIL'","export const START_RUN_ITEM = 'START_RUN_ITEM'\r\nexport const START_RUN_SUCCESS = 'START_RUN_SUCCESS'\r\nexport const START_FAIL = 'START_FAIL'\r\n","import axios from \"axios\";\r\nimport { START_RUN_ITEM, START_FAIL, START_RUN_SUCCESS } from \"../constants/startConstant\";\r\n\r\n\r\n\r\n\r\nexport const startBtn = (pin, state) => async (dispatch, getState) => {\r\n   \r\n        try {\r\n\r\n            dispatch({\r\n               type: START_RUN_ITEM,\r\n           })\r\n   \r\n           const { userLogin: { data: dataLogin } } = getState()\r\n           const { access_token } = dataLogin.token\r\n   \r\n           const config = {\r\n               headers: {\r\n                   'Authorization': `Bearer ${access_token}`,\r\n                   'Content-Type': 'application/json'\r\n               }\r\n           }\r\n   \r\n           const { data } = await axios.put(\r\n               'https://industrialiot.onrender.com/api/updatepin',\r\n               { pin, state },\r\n               config\r\n           )\r\n   \r\n           dispatch({\r\n               type: START_RUN_SUCCESS,\r\n               payload: data\r\n           })\r\n       }\r\n       catch (error) {\r\n           dispatch({\r\n               type: START_FAIL,\r\n               payload: error\r\n           })\r\n       }\r\n    \r\n   \r\n}\r\n\r\n","import axios from \"axios\";\r\nimport { STOP_RUN_ITEM, STOP_FAIL, STOP_RUN_SUCCESS } from \"../constants/stopConstant\";\r\n\r\n\r\nexport const stopBtn = (pin, state) => async (dispatch, getState) => {\r\n   \r\n    \r\n        try {\r\n            dispatch({\r\n                type: STOP_RUN_ITEM,\r\n    \r\n            })\r\n    \r\n            const { userLogin: { data: dataLogin } } = getState()\r\n            const { access_token } = dataLogin.token\r\n    \r\n            const config = {\r\n                headers: {\r\n                    'Authorization': `Bearer ${access_token}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n    \r\n            const { data } = await axios.put(\r\n                'https://industrialiot.onrender.com/api/updatepin',\r\n                { pin, state },\r\n                config\r\n            )\r\n    \r\n            dispatch({\r\n                type: STOP_RUN_SUCCESS,\r\n                payload: data\r\n            })\r\n        }\r\n        catch (error) {\r\n            dispatch({\r\n                type: STOP_FAIL,\r\n                payload: error.message\r\n            })\r\n        }\r\n     } \r\n\r\n\r\n","export const STOP_RUN_ITEM = 'STOP_RUN_ITEM'\r\nexport const STOP_RUN_SUCCESS = 'STOP_RUN_SUCCESS'\r\nexport const STOP_FAIL = 'STOP_FAIL'","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Loader from '../components/Loader'\r\nimport RegisterScreen from './RegisterScreen'\r\nimport Test from './LoginScreen'\r\nimport '../index.css'\r\n// import { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { userLogin,userRegister } from '../actions/userAction'\r\nimport LoginScreenUpdate from './LoginScreenUpdate'\r\n\r\n\r\n\r\n\r\nconst HomeScreen = (defaultProps) => {\r\n\r\n    const history = useHistory()\r\n    const { location, match, history: historyProps } = defaultProps\r\n    const dispatch = useDispatch();\r\n\r\n    const userInfo = useSelector(state => state.userLogin)\r\n    // const { loading, success, data } = userInfo\r\n    const { loading, success, data } = userInfo;\r\n    \r\n    \r\n    \r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    \r\n    useEffect( () => {\r\n        if(success){\r\n            history.push('/spinner')\r\n        }\r\n    }, [success, history])\r\n\r\n    const userHandler = (e) => {\r\n        setEmail(e.target.value)\r\n\r\n    }\r\n    const passHandler = (e) => {\r\n        setPassword(e.target.value)\r\n\r\n    }\r\n    console.log(email, password)\r\n\r\n    const loginHandler = (e) => {\r\n        \r\n        e.preventDefault()\r\n        dispatch(userLogin(email, password))\r\n\r\n        // if ( loading ) {\r\n        //     <Loader />\r\n        // }\r\n        \r\n        // if (success) {\r\n        //     history.push('/testLogin')\r\n        // }\r\n\r\n        console.log(data)\r\n\r\n        \r\n    }\r\n    return (\r\n        <>\r\n        <div className='box'>\r\n            <ul style={{color: 'white'}}>\r\n                <li>\r\n                    <div style={{background:'#85BFFF'}} className='firstone'></div>\r\n                    <div style={{background:'#3C5080'}}></div>\r\n                </li>\r\n                <li>\r\n                    <div style={{background:'#253147'}}></div>\r\n                    <div style={{background: 'radial-gradient(circle, rgb(255,196,118), #FEFFEE)'}}>b</div>\r\n                </li>\r\n                \r\n                \r\n            </ul>\r\n        </div>\r\n            <div className='login-page'>\r\n                <div className='iot-img'></div>\r\n                <h2 className='info'>Power IIOT: Infinite possiblities , Max supervision </h2>\r\n            \r\n                <form onSubmit={loginHandler} > \r\n                  \r\n                  { (success === false) && <div style={{color: 'maroon', textAlign: 'center'}}>Wrong credentials</div>}\r\n                  {/* <label>Email:</label> */}\r\n                  <input type='text' placeholder='Email, User id , Number' value={email} onChange={userHandler} />\r\n                  {/* <label>Password:</label> */}\r\n                  <input type='password' placeholder='Password' value={password} onChange={passHandler} />\r\n                  {(loading)? <div className=\"loader\"></div>: <input type='Submit' value='Log In' className='transform' />}\r\n              </form>\r\n                <div className='footer'>\r\n\r\n                    <p > Don't have an account ? <Link to='/register' className='style'>Register</Link> </p> \r\n                    <p><Link to='/forgotpassword' style={{color:'maroon', textDecoration: 'none'}}> Forgot Password</Link></p>\r\n                </div>\r\n            </div>\r\n      \r\n        \r\n\r\n    </>\r\n    )\r\n}\r\n\r\n\r\n   \r\nexport default HomeScreen","import React, { useState } from 'react'\r\nimport { startBtn } from '../actions/startAction'\r\nimport { stopBtn } from '../actions/stopAction'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Header from '../components/Header'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\n// import ControlBtn from '../components/ControlBtn'\r\n// eslint-disable-next-line\r\n\r\nimport Table from '../components/Table'\r\nimport { GoGear } from \"react-icons/go\";\r\n\r\n\r\n   \r\n\r\n\r\n\r\nconst pin = '26';\r\n\r\nconst SpinnerScreen = () => {\r\n    console.log(window.scrollY, window.scrollX);\r\n    console.log(window.innerHeight, window.innerWidth);\r\n\r\n    window.scrollTo({\r\n        y:-50,\r\n        x:0\r\n    })\r\n  \r\n    const history = useHistory();\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { data: access_token } = userLogin\r\n    console.log(userLogin);\r\n\r\n    const allUsers = useSelector(state => state.allUsers);\r\n    const {loading} = allUsers;\r\n\r\n    const control = useSelector(state => state.showUsers);\r\n    const {controlData, disabled} = control;\r\n\r\n    const [isSpinning, setIsSpinning] = useState(false);\r\n    let state;\r\n    \r\n    const allRegisteredUsers =  useSelector((state) => state.allUsers);\r\n    let {loading: loadingRegUsers, success} = allRegisteredUsers;\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n  \r\n\r\nconsole.log(disabled);\r\n    const startBtnHandler = (e) => {\r\n\r\n        if(!access_token?.token) {\r\n            alert('you are not logged in')\r\n            history.push('/')\r\n        } else {\r\n            state = '1'\r\n            dispatch(startBtn(pin, state))\r\n            setIsSpinning(true);\r\n            e.preventDefault()\r\n        }\r\n\r\n    }\r\n\r\n    const stopBtnHandler = (e) => {\r\n\r\n        if(!access_token?.token) {\r\n            alert('you are not logged in')\r\n            history.push('/')\r\n        } else {\r\n            state = '0'\r\n            dispatch(stopBtn(pin, state))\r\n            setIsSpinning(false);\r\n            e.preventDefault()\r\n        }\r\n\r\n       \r\n    }\r\n    // console.log(`this is the screenval`, showTable)\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n        {};\r\n            <Header />\r\n\r\n           \r\n                {isSpinning ? (\r\n                   <div className='spinner'>{console.log('spin')}</div>\r\n                ) : (\r\n                    <div className='spinner-stop' >{console.log('stop')}</div>\r\n                )}\r\n\r\n{/* #474859 */}\r\n{/* rgb(71,72,89) */}\r\n\r\n              <div className='registered-user'>\r\n                {/* console.log(DISPLAYHIDDEN); */}\r\n               \r\n                   {(loading)?<div className=\"loader-big\"></div> : <Table display={controlData} className='table-data' />} \r\n\r\n                \r\n\r\n              </div>\r\n           \r\n{/* {console.log(disabled)} */}\r\n            <div className='controls' >\r\n                    <p className='none'></p>\r\n                    <button className='startBtn' onClick={startBtnHandler} >START</button>\r\n                    <button className='stopBtn'  onClick={stopBtnHandler} >STOP</button>\r\n               \r\n               </div>\r\n            \r\n\r\n\r\n               {/* #2eb1f8 blue like\r\n               rgb(255,196,118) */}\r\n\r\n            {/* <div className={`spinner ${isSpinning ? 'spin' : ''}`}>\r\n      \r\n                    \r\n                    <div className='controls'>\r\n                        <button className='startBtn' onClick={startBtnHandler}>Start</button>\r\n                        <button className='stopBtn' onClick={stopBtnHandler}>Stop</button>\r\n                    </div>\r\n           </div> */}\r\n            \r\n             \r\n\r\n\r\n            \r\n          \r\n\r\n            <footer>\r\n                {/* holds stanley inc as footer check brad footers component  */}\r\n            </footer>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SpinnerScreen","import React from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\n\r\nconst ForgotPasswordUIOne = (props) => {\r\n  return (\r\n    <div>\r\n         <div>\r\n                        <h2>Forgot Password</h2>\r\n                            <div className='forgotPass-form'>\r\n                                <form onSubmit={props.proceed}>\r\n                                    {(props.err)? <label>{props.err}</label>: <label>Enter Email Address</label>}\r\n                                    <input type='text' placeholder='Enter Registered Email' onChange={props.email} />\r\n                                    <p>Back to <Link to='/'><span style={{color:'white', borderBottom:'2px dotted #2eb1f8'}}>Sign in </span></Link></p>\r\n                                    {(props.loading)? <div className=\"loader\"></div>:<input type='submit' value='Proceed' className='proceed' />}\r\n                                {/* {console.log(emailForgot)} */}\r\n                                    <p>Don't have an account? </p>\r\n                                <p className='sign-up' onClick={props.signup}>Sign Up</p>\r\n                                </form>\r\n        \r\n                            </div>\r\n                    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPasswordUIOne;","import React from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst ForgotPasswordUITwo = (props) => {\r\n\r\n  const emailDetails =  useSelector((state) => state.forgotPassword);\r\n   let {loading, success, emailInfo} = emailDetails;\r\n\r\n   const value = emailInfo\r\n\r\n  return (\r\n    <div>\r\n        <div>\r\n                {console.log('got here fr verification')}\r\n                <h2>VERIFICATION</h2>\r\n                <div className='forgotPass-form'>\r\n                    <form onSubmit={props.proceed}>\r\n                        \r\n                        <p>Enter Verification Code </p>\r\n                        \r\n                        <input type='text' className='otp-entered' onChange={props.otp} />\r\n                        {/* {console.log(otpInput)} */}\r\n                       {/* {<input type='submit' value='Confirm' className='proceed' />} */}\r\n                       {(props.otp !== value)? 'Invalid OTP' : <input type='submit' value='Confirm' className='proceed' />}\r\n                    \r\n                    </form>\r\n               </div>\r\n               \r\n            </div>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPasswordUITwo","import React from 'react'\r\n\r\nconst ForgotPasswordUIThree = (props) => {\r\n  return (\r\n    <div>\r\n        <div>\r\n               \r\n                {/* <h2>VERIFICATION</h2> */}\r\n                <div className='forgotPass-form'>\r\n                    <form onSubmit={props.proceed}>\r\n                        \r\n                        {/* <p>Enter Verification Code </p> */}\r\n                        <label>Enter New Password</label>\r\n                        <input type='text' className='newPassword' onChange={props.passOne}/>\r\n                        <label>Confirm Password</label>\r\n                        <input type='text' className='newPassword' onChange={props.passTwo}/>\r\n                        {\r\n                          (props.passTwoVal !== props.passOneVal) && <p style={{color: 'rgba(255, 0, 0, .85)'}}>Password Incorrect</p>\r\n                          \r\n                        }\r\n                        {/* <input type='submit'  value='Submit' /> */}\r\n                        {/* {console.log(otpInput)} */}\r\n                        {(props.loading)? <div className=\"loader\"></div>:<input type='submit' value='Confirm' className='proceed' />}\r\n                    \r\n                    </form>\r\n               </div>\r\n               \r\n            </div>  \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPasswordUIThree","import React from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport { forgotPassword, newSetPassword } from '../actions/forgotPassword'\r\nimport {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ForgotPasswordUIOne from '../Helper/forgotPasswordUIOne'\r\nimport ForgotPasswordUITwo from '../Helper/forgotPasswordUITwo'\r\nimport ForgotPasswordUIThree from '../Helper/ForgotPasswordUIThree'\r\n\r\n\r\nconst ForgotScreen = () => {\r\n    let[emailForgot, setEmailForgot] = useState('')\r\n    const history = useHistory();\r\n    const dispatch = useDispatch()\r\n    // let page,count;\r\n    // let page;\r\n    \r\n\r\n    // count = 0;\r\n    // count +=count;\r\n    // page = count;\r\n    let [otpValInput, setOTP] = useState('');\r\n    let [newPass, setNewpass] = useState('')\r\n    let [confirmPass, setConfirmpass] = useState('')\r\n    let [count, setCount] = useState(0);\r\n    const [page, setPage] = useState(0);\r\n    let passStatus;\r\n\r\n    localStorage.setItem(\"count\", `${count}`);\r\n    const countLocalStored = localStorage.getItem('count');\r\n    \r\n    const emailDetails =  useSelector((state) => state.forgotPassword);\r\n   let {loading, success, emailInfo} = emailDetails;\r\n\r\n    const newSetPass = useSelector((state) => state.newPassword);\r\n    // const {loading:loadingNewPass,  data} = newSetPass;\r\n    // const {loading:loadingNewPass, success:successPassApi, data} = newSetPass;\r\n    let {loading:loadingNewPass, success:successPassApi, data} = newSetPass;\r\n\r\n   useEffect(() => {\r\n            if(successPassApi)  {\r\n            //     setTimeout(() => {\r\n            //         history.push('/')\r\n            // }, 3000)\r\n            history.push('/')\r\n            }\r\n                \r\n                    \r\n        },[successPassApi, history])\r\n\r\n        if(successPassApi){\r\n            history.push('/')\r\n        }\r\n\r\n    const ValidateEmail= (emailForgot) => \r\n            {\r\n                if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(emailForgot))\r\n                {\r\n                    return (true)\r\n                }\r\n                alert(\"You have entered an invalid email address!\")\r\n                return (false)\r\n            }\r\n\r\n    const signUpHandler = () => {\r\n        history.push('/register')\r\n    }\r\n\r\n    const emailForgotHandler = (e) => {\r\n        // console.log(e);\r\n        setEmailForgot(e.target.value);\r\n        localStorage.setItem('emailForgot', emailForgot)\r\n      \r\n    }\r\n\r\n   const otpValInputHandler = (e) => {\r\n                setOTP(e.target.value);\r\n                otpValInput.trim();\r\n                otpValInput += otpValInput;\r\n    }\r\n\r\n    const newPassHandler = (e) => {\r\n            setNewpass (e.target.value);\r\n            newPass.trim();\r\n     }\r\n\r\n     const confirmPassHandler = (e) => {\r\n            setConfirmpass (e.target.value)\r\n            confirmPass.trim();\r\n         }\r\n\r\n\r\n    const proceedHandlerBtn = (e ) => {\r\n        e.preventDefault();\r\n        // let count;\r\n        // if(!successPassApi) count = 0;\r\n\r\n        emailForgot = emailForgot || localStorage.getItem('emailForgot');\r\n        console.log(emailForgot)\r\n        console.log(count ,'begining of count')\r\n        // console.log('got here in btn handler')\r\n        // if(!page){\r\n\r\n            // count = 0;\r\n            // count = (page > 0)? page : 0;\r\n            // console.log('first count after not assigned val', count)\r\n            // console.log('page number  after clicked', page)\r\n        // }\r\n                    // if(page === 0 ){\r\n                        //fisrt displayed page\r\n                    if(count === 0  || countLocalStored ){\r\n                        const emailValid = ValidateEmail(emailForgot);\r\n                        if(emailValid){\r\n                            if(page !== 2){\r\n                                dispatch(forgotPassword(emailForgot))\r\n                                // success = true;\r\n                            }\r\n                            console.log('got here after success set to true')\r\n                           \r\n                        }\r\n                        // console.log(page, 'page', count , 'count')\r\n                        \r\n                        if(success) {\r\n                            console.log('successful dispatch in here')\r\n                            // count++\r\n                              const parameters =   document.querySelector('.test').getBoundingClientRect()\r\n                              const{top, left} = parameters;\r\n                              console.log(top, left , 'values of rect bounding')\r\n                               window.scrollTo({\r\n                                top,\r\n                                left,\r\n                                behavior:'smooth'\r\n                               })\r\n                               //moves to the second page\r\n                               \r\n                            //    page++;\r\n                            //    setPage(page + 1);\r\n                            // window.scrollto element for page2 (the element -use getboundingrect() of the element)\r\n                            setCount(count + 1)\r\n                            setPage(count + 1)\r\n                            console.log(`clicked ${count} times`)\r\n                            success =false;\r\n                        }\r\n                    }\r\n                    console.log(`click is now ${count} time`);\r\n                    // console.log(page, 'page', count , 'count')\r\n                    if(otpValInput.length === 6){\r\n                    // if(page === 1){\r\n\r\n                    if(count === 1){\r\n                        console.log('inside logic of 1')\r\n                        // if(otpValInput.length===6){\r\n                        // if(page === 1){\r\n                            // count++;\r\n                            console.log(count ,'count', page , 'page') \r\n                            const parameters = document.querySelector('.test2').getBoundingClientRect()\r\n                            console.log(parameters)\r\n                            const{top, left} = parameters;\r\n                             window.scrollTo({\r\n                              top:top * 2,\r\n                              left: left * 2,\r\n                              behavior:'smooth'\r\n                             })\r\n\r\n                             setCount(count + 1);\r\n                             setPage(count + 1)\r\n                         }\r\n                        //  count = page\r\n                        //  count += page\r\n                         //display third page\r\n                        //  page = count;\r\n                //             window.scrollto element for page 3(the element -use getboundingrect() of the element)\r\n                // temporarily hold otpvalue nothing more\r\n                    }\r\n                    console.log(page);\r\n                    if(page === 2){\r\n                    // if(count === 2){\r\n                        console.log('inside of logic 2')\r\n                    passStatus = (newPass === confirmPass)\r\n                        if(passStatus){\r\n\r\n                            // dispatch to the api receiving \r\n                                dispatch(newSetPassword(otpValInput, newPass));\r\n                                console.log(otpValInput, newPass);\r\n                                successPassApi = true;\r\n                                // history.push('/');\r\n                                setCount(0);\r\n                                setPage(0)\r\n\r\n                                const parameters =   document.querySelector('.test-page-0').getBoundingClientRect()\r\n                                const{top, left} = parameters;\r\n                                console.log(top, left , 'values of rect bounding')\r\n                                 window.scrollTo({\r\n                                  top,\r\n                                  left,\r\n                                  behavior:'smooth'\r\n                                 })\r\n                        }\r\n                        \r\n                        // use the destructure from the above api request function the success val used\r\n                        // as a condition in the useEffect and route to login page\r\n                    //    if(successPassApi)\r\n                        // count = 0;\t\r\n            //   place loaing val for api to update password , if loading to show sign of success, settime out to route to default lgin page\t\r\n                }\r\n                // ++count;\r\n                if(successPassApi) history.push('/')\r\n\r\n                \r\n                    // page = count;\r\n                // page = (count === 0)? count: count;    \r\n            console.log(count ,'end of btnhandler', 'page', page)    \r\n        }\r\n    //create an html collection of input tags\r\n    //loops throug individual input to get each value having individual onChange,\r\n    //concatenate all input value onChange in each loop for each element.\r\n\r\n    //in proceed btnhandler , if we have success not true ,that is yet to input mail, the dispatch receives mail arg\r\n    //else the proceed btnhandler dispatches to the verify otp api\r\n    // const setOtpInputHandler = (e) =>{\r\n\r\n    //     otpInput.trim();\r\n    //     setOtpInput(e.target.value);\r\n    //     otpInput += otpInput;\r\n\r\n    //     console.log(otpInput);\r\n    // }\r\n\r\n   \r\n\r\n    // console.log('got here')\r\n    // const proceedBtnHandler = (e) => {\r\n    //     e.preventDefault();\r\n        \r\n    //     (!successClone)&& ValidateEmail(emailForgot);\r\n    //     if(emailForgot.length >=6){\r\n    //         successClone = true;\r\n            \r\n            \r\n    //         // const { x:x1, y:y1,top:top1 } = page2.getBoundingClientRect()\r\n    //         // const { x:x3, y:y3,top:top3 } = page3.getBoundingClientRect()\r\n    \r\n    //         totalEl.forEach((el, i) => {\r\n    //             const {x,y,top} = el.getBoundingClientRect()\r\n    //             window.scrollTo({\r\n    //                 x,\r\n    //                 y,\r\n    //                 top,\r\n    //                 behavior:'smooth'\r\n                    \r\n    //             })\r\n    //         })\r\n\r\n    //     }\r\n    //     if(!otpInput)\r\n    //     dispatch(forgotPassword(emailForgot))\r\n      \r\n    //     console.log( successClone)\r\n       \r\n\r\n    // }\r\n// console.log(emailForgot)\r\n\r\n    return(\r\n        <>\r\n        {console.log('inside the xml')}\r\n        <div className='forgotPass-container'>\r\n            <div className='test-page-0'>\r\n                <ForgotPasswordUIOne proceed={proceedHandlerBtn}\r\n                    email={emailForgotHandler}\r\n                    signup={signUpHandler}\r\n                    err={ValidateEmail}\r\n                    loading={loading}\r\n                    className='element-one'\r\n                    />\r\n            </div>\r\n                \r\n\r\n               \r\n        \r\n            \r\n        {/* <p className='test'>hello and testing dom</p> */}\r\n        <div className='test'>\r\n        <ForgotPasswordUITwo proceed={proceedHandlerBtn}\r\n            otp={otpValInputHandler}\r\n            className='element-two'\r\n            /> \r\n        </div>\r\n          \r\n            \r\n            \r\n    \r\n        \r\n        {/* <p className='test2'>hello and testing domm</p> */}\r\n\r\n           <div className='test2'>\r\n           <ForgotPasswordUIThree proceed={proceedHandlerBtn}\r\n            passOne={newPassHandler}\r\n            passTwo={confirmPassHandler}\r\n            loading={loadingNewPass}\r\n            passOneVal= {newPass}\r\n            passTwoVal = {confirmPass}\r\n            className='element-three'\r\n            />\r\n           </div>\r\n          \r\n      \r\n\r\n\r\n        </div>  \r\n        \r\n        </>\r\n        \r\n    )\r\n }\r\n\r\n\r\nexport default ForgotScreen\r\n\r\n","import axios from 'axios'\r\nimport { \r\n    FORGOT_PASSWORD_FAIL, \r\n    FORGOT_PASSWORD_REQUEST, \r\n    FORGOT_PASSWORD_SUCCESS, \r\n    NEW_PASSWORD_FAIL, \r\n    NEW_PASSWORD_REQUEST, \r\n    NEW_PASSWORD_SUCCESS \r\n} from \"../constants/userConstant\"\r\n\r\nexport const forgotPassword = (email) => async(dispatch, getState) =>{\r\n    try {\r\n        \r\n        // let token = getState().userLogin.data;\r\n        // console.log(token)\r\n        // const {} = getState();\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_REQUEST\r\n        })\r\n    \r\n        console.log(email, 'request')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        \r\n           const {data} = await axios.get(`https://industrialiot.onrender.com/api/resetpass`, {email}, config)        \r\n\r\n    \r\n        dispatch({\r\n            type: FORGOT_PASSWORD_SUCCESS,\r\n            payload: data\r\n        })\r\n        console.log(email, 'after success')\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_FAIL,\r\n            payload: error\r\n        })\r\n    }\r\n\r\n\r\n    \r\n   \r\n}\r\n\r\nexport const newSetPassword = (token, newPass) => async(dispatch, getState) =>{\r\n    try {\r\n        \r\n        // let token = getState().userLogin.data;\r\n        // console.log(token)\r\n        // const {} = getState();\r\n        dispatch({\r\n            type: NEW_PASSWORD_REQUEST\r\n        })\r\n    \r\n        // console.log(, 'request')\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        \r\n           const {data} = await axios.put(`https://industrialiot.onrender.com/api/resetouttoken`, {token, newPass}, config)        \r\n\r\n    \r\n        dispatch({\r\n            type: NEW_PASSWORD_SUCCESS,\r\n            payload: data\r\n        })\r\n        // console.log(email, 'after success')\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PASSWORD_FAIL,\r\n            payload: error\r\n        })\r\n    }\r\n\r\n\r\n    \r\n   \r\n}","import React from 'react'\r\nimport HomeScreen from './screens/HomeScreen';\r\n// import LoginScreen from './screens/LoginScreen'\r\nimport LoginScreenUpdate from './screens/LoginScreenUpdate'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap'\r\nimport './index.css'\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport SpinnerScreen from './screens/SpinnerScreen';\r\nimport ForgotScreen from './screens/ForgotScreen';\r\nimport Test from './screens/Test';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Container>\r\n          {/* //programmatically add header component when it route is not Homescreen \r\n          //check which of the defualt props has the path or url value and destructure */}\r\n          <Route path='/' component={HomeScreen} exact />\r\n          <Route path='/register' component={RegisterScreen}  />\r\n          {/* <Route path='/testLogin' component={LoginScreenUpdate}  /> */}\r\n          <Route path='/spinner' component={SpinnerScreen}  />\r\n          <Route path='/forgotpassword' component={ForgotScreen}  />\r\n          {/* <Route path='/forgotpassword' component={Test}  /> */}\r\n        </Container>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    OTP_REQUEST,\r\n    OTP_SUCCESS,\r\n    OTP_FAIL,\r\n    OTP_RESEND_REQUEST,\r\n    OTP_RESEND_SUCCESS,\r\n    OTP_RESEND_FAIL,\r\n    CHANGE_EMAIL_REQUEST,\r\n    CHANGE_EMAIL_SUCCESS,\r\n    CHANGE_EMAIL_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL\r\n} from \"../constants/userConstant\"\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, success: true, data: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { success: false, data: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload, success: true }\r\n        case USER_REGISTER_FAIL: \r\n            return {loading: false, error: action.payload}\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport const genOTPReducer = (state ={}, action) => {\r\n    switch(action.type){\r\n        case OTP_REQUEST :\r\n            return{loading: true}\r\n        case OTP_SUCCESS :\r\n            return {loading: false, success: true, otpInfo: action.payload}\r\n        case OTP_FAIL: \r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const resendOTPReducer = (state ={}, action) => {\r\n    switch(action.type){\r\n        case OTP_RESEND_REQUEST :\r\n            return{loading: true}\r\n        case OTP_RESEND_SUCCESS :\r\n            return {loading: false, success: true, data:action.payload}\r\n        case OTP_RESEND_FAIL: \r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const changeEmailReducer = (state ={}, action) => {\r\n    switch(action.type){\r\n        case CHANGE_EMAIL_REQUEST :\r\n            return{loading: true}\r\n        case CHANGE_EMAIL_SUCCESS :\r\n            return {loading: false, success: true, emailInfo:action.payload}\r\n        case CHANGE_EMAIL_FAIL: \r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n// import { userReducer } from './reducers/userReducer'\r\nimport { changeEmailReducer, genOTPReducer, userLoginReducer, userRegisterReducer } from './reducers/userReducers'\r\nimport { forgotPasswordReducer, newSetPasswordReducer } from './reducers/forgotPasswordReducer'\r\nimport {pinReducerBtn} from './reducers/pinApiStartReducer'\r\nimport { stopRunItem } from './reducers/stopReducer'\r\nimport { startRunItem } from './reducers/startReducer'\r\nimport { tableControlReducer } from './reducers/tableControlReducer'\r\nimport { getAllUsersReducers } from './reducers/getAllUsersReducers'\r\n\r\nconst reducer = combineReducers({\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userOtp: genOTPReducer,\r\n    changeEmailId: changeEmailReducer,\r\n    pinMotor: pinReducerBtn,\r\n    startButton: startRunItem,\r\n    stopButton: stopRunItem,\r\n    forgotPassword: forgotPasswordReducer,\r\n    newPassword: newSetPasswordReducer,\r\n    showUsers: tableControlReducer,\r\n    allUsers: getAllUsersReducers\r\n\r\n\r\n})\r\n\r\nconst initialState = {\r\n\r\n}\r\n//initial state for the store, when we also want anything to load up\r\n// or run automatically when the store runs we fix it in in our initial state\r\n\r\nconst middleWare = [thunk]\r\n\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleWare)))\r\nexport default store","import {\r\n    PIN_START_ITEM,\r\n    PIN_START_SUCCESS,\r\n    PIN_START_FAIL\r\n} from \"../constants/pinConstant\"\r\n\r\nexport const pinReducerBtn = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PIN_START_ITEM:\r\n            return { loading: true }\r\n        case PIN_START_SUCCESS:\r\n            return { loading: false, success: action.payload }\r\n        case PIN_START_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","export const START_RUN_ITEM = 'START_RUN_ITEM'\r\nexport const START_RUN_SUCCESS = 'START_RUN_SUCCESS'\r\nexport const START_FAIL = 'START_FAIL'\r\n\r\nexport const STOP_RUN_ITEM = 'STOP_RUN_ITEM'\r\nexport const STOP_RUN_SUCCESS = 'STOP_RUN_SUCCESS'\r\nexport const STOP_FAIL = 'STOP_FAIL'\r\n\r\nexport const PIN_START_ITEM = 'PIN_START_ITEM'\r\nexport const PIN_START_SUCCESS = 'PIN_START_SUCCESS'\r\nexport const PIN_START_FAIL = 'PIN_START_FAIL'","import {\r\n    START_RUN_ITEM,\r\n    START_FAIL,\r\n    START_RUN_SUCCESS\r\n} from \"../constants/pinConstant\";\r\n\r\n\r\nexport const startRunItem = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case START_RUN_ITEM:\r\n            return { loading: true }\r\n        case START_RUN_SUCCESS:\r\n            return { loading: false, success: action.payload }\r\n        case START_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport { STOP_RUN_ITEM, STOP_FAIL, STOP_RUN_SUCCESS } from \"../constants/pinConstant\";\r\n\r\n\r\nexport const stopRunItem = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case STOP_RUN_ITEM:\r\n            return { loading: true }\r\n        case STOP_RUN_SUCCESS:\r\n            return { loading: false, success: action.payload }\r\n        case STOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    FORGOT_PASSWORD_FAIL, \r\n    FORGOT_PASSWORD_REQUEST, \r\n    FORGOT_PASSWORD_SUCCESS, \r\n    NEW_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS\r\n} from \"../constants/userConstant\"\r\n\r\nexport const forgotPasswordReducer = (state ={}, action) => {\r\n    switch(action.type){\r\n        case FORGOT_PASSWORD_REQUEST:\r\n            return{loading: true}\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n            return {loading: false, success: true, emailInfo:action.payload}\r\n        case FORGOT_PASSWORD_FAIL: \r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const newSetPasswordReducer = (state ={}, action) => {\r\n    switch(action.type){\r\n        case NEW_PASSWORD_REQUEST:\r\n            return{loading: true}\r\n        case NEW_PASSWORD_SUCCESS:\r\n            return {loading: false, success: true, data:action.payload}\r\n        case NEW_PASSWORD_FAIL: \r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import { HIDE, SHOW } from \"../constants/tableConstant\";\r\n\r\n\r\n\r\nexport const tableControlReducer = (state = false, action) => {\r\n\tswitch(action.type){\r\n\t\tcase SHOW:\r\n\t\t\treturn {controlData: true, disabled:action.controlBtn};\r\n\t\tcase HIDE:\r\n\t\t\treturn {controlData: false, disabled:action.controlBtn};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t\t}\r\n\t}\r\n\r\n","import { GET_ALL_USERS_FAIL, GET_ALL_USERS_REQUEST, GET_ALL_USERS_SUCCESS } from \"../constants/getAllUsesConstant\";\r\n\r\nexport const getAllUsersReducers = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_USERS_REQUEST:\r\n            return { loading: true }\r\n        case GET_ALL_USERS_SUCCESS:\r\n            return { loading: false, success: action.payload }\r\n        case GET_ALL_USERS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}